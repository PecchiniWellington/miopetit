enum AnimalAge {
    PUPPY
    ADULT
    SENIOR
}

model Product {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String
    slug        String    @unique(map: "product_slug_idx")
    images      String[]
    description String
    stock       Int       @default(0)
    price       Decimal   @default(0) @db.Decimal(12, 2)
    rating      Decimal   @default(0) @db.Decimal(3, 2)
    numReviews  Int       @default(0)
    isFeatured  Boolean?  @default(false)
    banner      String?
    createdAt   DateTime  @default(now()) @db.Timestamp(6)
    updatedAt   DateTime  @updatedAt
    animalAge   AnimalAge

    /**
     * FOREIGN KEYS
     */
    productBrandId      String? @db.Uuid
    productPathologyId  String? @db.Uuid
    productUnitFormatId String? @db.Uuid

    /**
     * RELAZIONE 1-TO-MANY
     */
    productBrand      ProductBrand?      @relation(fields: [productBrandId], references: [id])
    productPathology  ProductPathology?  @relation(fields: [productPathologyId], references: [id])
    productUnitFormat ProductUnitFormat? @relation(fields: [productUnitFormatId], references: [id], onDelete: SetNull)

    /**
     * RELAZIONE MANY-TO-MANY
     */
    productProteinOnProduct  ProductProteinOnProduct[]
    productsFeatureOnProduct ProductFeatureOnProduct[]
    review                   Review[]
    orderitems               OrderItem[]
    productCategory          ProductCategory[]
}
