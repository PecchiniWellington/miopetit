enum AnimalAge {
    PUPPY
    ADULT
    SENIOR
}

model Product {
    id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String
    slug        String     @unique(map: "product_slug_idx")
    images      String[]
    description String
    stock       Int        @default(0)
    price       Decimal    @default(0) @db.Decimal(12, 2)
    rating      Decimal    @default(0) @db.Decimal(3, 2)
    numReviews  Int        @default(0)
    isFeatured  Boolean?   @default(false)
    banner      String?
    createdAt   DateTime   @default(now()) @db.Timestamp(6)
    updatedAt   DateTime   @updatedAt
    animalAge   AnimalAge?

    /**
     * FOREIGN KEYS
     */
    formatId            String? @db.Uuid
    categoryId          String? @db.Uuid
    productPatologyId   String? @db.Uuid
    productFeaturesId   String? @db.Uuid
    productBrandId      String? @db.Uuid
    unitOfMeasureId     String? @db.Uuid
    productUnitFormatId String? @db.Uuid
    productPathologyId  String? @db.Uuid

    /**
     * RELAZIONE 1-TO-MANY con ProductUnitValue
     */
    productUnitFormat       ProductUnitFormat?        @relation(fields: [productUnitFormatId], references: [id], onDelete: SetNull)
    // ðŸ”— 1-to-Many
    category                Category?                 @relation(fields: [categoryId], references: [id], onDelete: SetNull)
    productBrand            ProductBrand?             @relation(fields: [productBrandId], references: [id])
    productFeatures         ProductFeatures?          @relation(fields: [productFeaturesId], references: [id])
    productPathology        ProductPathology?         @relation(fields: [productPathologyId], references: [id])
    productProteinOnProduct ProductProteinOnProduct[]
    review                  Review[]
    orderitems              OrderItem[]
}

model ProductUnitFormat {
    id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    unitValueId   String @db.Uuid
    unitMeasureId String @db.Uuid

    unitValue     UnitValue     @relation(fields: [unitValueId], references: [id], onDelete: Cascade)
    unitOfMeasure UnitOfMeasure @relation(fields: [unitMeasureId], references: [id], onDelete: Cascade)

    products Product[]

    @@unique([unitValueId, unitMeasureId])
}

/**
 * [
 * {
 * "id": "a1234567-89ab-cdef-0123-456789abcdef",
 * "unitValue": { "id": "val-001", "value": 15 },
 * "unitOfMeasure": { "id": "unit-kg", "abbreviation": "kg" },
 * "products": [
 * { "id": "prod-001", "name": "Crocchette per Cani 15kg" },
 * { "id": "prod-002", "name": "Cibo per Gatti 15kg" }
 * ]
 * },
 * {
 * "id": "b2345678-89ab-cdef-0123-456789abcdef",
 * "unitValue": { "id": "val-002", "value": 5 },
 * "unitOfMeasure": { "id": "unit-kg", "abbreviation": "kg" },
 * "products": [
 * { "id": "prod-003", "name": "Alimento Secco per Cuccioli 5kg" }
 * ]
 * },
 * {
 * "id": "c3456789-89ab-cdef-0123-456789abcdef",
 * "unitValue": { "id": "val-003", "value": 2 },
 * "unitOfMeasure": { "id": "unit-l", "abbreviation": "L" },
 * "products": []
 * }
 * ]
 */
