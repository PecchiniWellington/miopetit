enum AnimalAge {
    PUPPY
    ADULT
    SENIOR
}

model Product {
    id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name               String
    slug               String    @unique(map: "product_slug_idx")
    images             String[]
    description        String
    shortDescription   String
    stock              Int       @default(0)
    price              Decimal   @default(0) @db.Decimal(12, 2)
    costPrice          Decimal   @default(0) @db.Decimal(12, 2)
    rating             Decimal   @default(0) @db.Decimal(3, 2)
    numReviews         Int       @default(0)
    isFeatured         Boolean?  @default(false)
    banner             String?
    createdAt          DateTime  @default(now()) @db.Timestamp(6)
    updatedAt          DateTime  @updatedAt
    animalAge          AnimalAge
    categoryType       String
    percentageDiscount Int?      @default(0)

    /**
     * FOREIGN KEYS
     */
    productBrandId      String? @db.Uuid
    productPathologyId  String? @db.Uuid
    productUnitFormatId String? @db.Uuid
    contributorId       String? @db.Uuid

    /**
     * RELAZIONE 1-TO-MANY
     */
    productBrand      ProductBrand?      @relation(fields: [productBrandId], references: [id])
    productUnitFormat ProductUnitFormat? @relation(fields: [productUnitFormatId], references: [id], onDelete: SetNull)
    contributor       Contributor?       @relation(fields: [contributorId], references: [id])

    /**
     * RELAZIONE MANY-TO-MANY
     */
    review                    Review[]
    orderitems                OrderItem[]
    productCategory           ProductCategory[]
    productProteinOnProduct   ProductProteinOnProduct[]
    productsFeatureOnProduct  ProductFeatureOnProduct[]
    productPathologyOnProduct ProductPathologyOnProduct[]
    User                      User?                       @relation(fields: [userId], references: [id])
    userId                    String?                     @db.Uuid
}
