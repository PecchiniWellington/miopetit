enum AnimalAge {
    PUPPY
    ADULT
    SENIOR
}

model Product {
    id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String
    slug        String     @unique(map: "product_slug_idx")
    images      String[]
    description String
    stock       Int        @default(0)
    price       Decimal    @default(0) @db.Decimal(12, 2)
    rating      Decimal    @default(0) @db.Decimal(3, 2)
    numReviews  Int        @default(0)
    isFeatured  Boolean?   @default(false)
    banner      String?
    createdAt   DateTime   @default(now()) @db.Timestamp(6)
    updatedAt   DateTime   @updatedAt
    animalAge   AnimalAge?

    categoryId        String?  @db.Uuid
    productBrandId    String[] @db.Uuid
    formatId          String?  @db.Uuid
    productFeaturesId String?  @db.Uuid

    category          Category?        @relation(fields: [categoryId], references: [id], onDelete: SetNull)
    orderitems        OrderItem[]
    Review            Review[]
    productPatologyId String?          @db.Uuid
    productBrand      ProductBrand?    @relation("ProductBrand", fields: [productBrandId], references: [id], onDelete: SetNull)
    format            ProductFormat?   @relation("ProductFormat", fields: [formatId], references: [id], onDelete: SetNull)
    productFeatures   ProductFeatures? @relation("ProductFeatures", fields: [productFeaturesId], references: [id], onDelete: SetNull)

    productProteinId String?          @db.Uuid
    ProductProtein   ProductProtein?  @relation(fields: [productProteinId], references: [id])
    ProductPatology  ProductPatology? @relation(fields: [productPatologyId], references: [id])
}
