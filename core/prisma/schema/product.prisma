model Product {
    id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String
    slug        String      @unique(map: "product_slug_idx")
    images      String[]
    brand       String
    description String
    stock       Int
    price       Decimal     @default(0) @db.Decimal(12, 2)
    rating      Decimal     @default(0) @db.Decimal(3, 2)
    numReviews  Int         @default(0)
    isFeatured  Boolean     @default(false)
    banner      String?
    createdAt   DateTime    @default(now()) @db.Timestamp(6)
    updatedAt   DateTime    @updatedAt
    categoryId  String?     @db.Uuid
    category    Category?   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    orderitems  OrderItem[]
    Review      Review[]

    productBrand    ProductBrand[]    @relation("ProductBrand")
    format          Format[]          @relation("ProductFormat")
    animalAge       AnimalAge[]       @relation("AnimalAge")
    productFeatures ProductFeatures[] @relation("ProductFeatures")
    productProtein  ProductProtein[]  @relation("ProductProtein")
    productPatology ProductPatology[] @relation("ProductPatology")

    productBrandId String? @db.Uuid
}
